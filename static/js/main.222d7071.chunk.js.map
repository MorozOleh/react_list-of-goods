{"version":3,"sources":["components/Goods/Goods.jsx","components/GoodsList/GoodsList.jsx","components/Buttons/ButtonShowList/ButtonShowList.jsx","components/Buttons/ButtonReverseList./ButtonReverseList.jsx","components/Buttons/ButtonSortAlphabetically/ButtonSortAlphabetically.jsx","components/Buttons/ButtonResetList/ButtonResetList.jsx","components/Buttons/ButtonSortByLength/ButtonSortByLength.jsx","App.js","index.js"],"names":["Goods","goods","GoodsList","isReverse","sortBy","initialGoods","newGoodsList","sort","currentGoods","nextGoods","length","localeCompare","reverse","map","key","ButtonShowList","React","memo","props","type","onClick","handler","propTypes","PropTypes","func","isRequired","ButtonReverseList","ButtonSortAlphabetically","ButtonResetList","ButtonSortByLength","goodsFromServer","App","state","isShown","showListHandler","setState","prevState","reverseListHandler","sortListAlphabeticallyHandler","sortListByLengthHandler","resetListHandler","this","className","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.222d7071.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport React from 'react';\n\nexport function Goods({ goods }) {\n  return (\n    <li>{goods}</li>\n  );\n}\n\nGoods.propTypes = {\n  goods: PropTypes.string.isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\n\nimport React from 'react';\nimport { Goods } from '../Goods';\n\nexport function GoodsList({\n  isReverse,\n  sortBy,\n  initialGoods,\n}) {\n  const newGoodsList = [...initialGoods];\n\n  newGoodsList.sort((\n    currentGoods, nextGoods,\n  ) => {\n    switch (sortBy) {\n      case 'length':\n        return currentGoods.length - nextGoods.length;\n\n      case 'alphabetically':\n        return currentGoods.localeCompare(nextGoods);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    newGoodsList.reverse();\n  }\n\n  return (\n    <ul>\n      {newGoodsList.map(goods => (\n        <Goods key={goods} goods={goods} />\n      ))}\n    </ul>\n  );\n}\n\nGoodsList.propTypes = {\n  goodsList: PropTypes.arrayOf(PropTypes.string.isRequired),\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const ButtonShowList = React.memo(props => (\n  <button\n    type=\"button\"\n    onClick={props.handler}\n  >\n    Start\n  </button>\n));\n\nButtonShowList.propTypes = {\n  handler: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const ButtonReverseList = React.memo(\n  props => (\n    <button\n      type=\"button\"\n      onClick={props.handler}\n    >\n      Reverse\n    </button>\n  ),\n);\n\nButtonReverseList.propTypes = {\n  handler: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const ButtonSortAlphabetically = React.memo(\n  props => (\n    <button\n      type=\"button\"\n      onClick={props.handler}\n    >\n      Sort alphabetically\n    </button>\n  ),\n);\n\nButtonSortAlphabetically.propTypes = {\n  handler: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const ButtonResetList = React.memo(\n  props => (\n    <button\n      type=\"button\"\n      onClick={props.handler}\n    >\n      Reset\n    </button>\n  ),\n);\n\nButtonResetList.propTypes = {\n  handler: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const ButtonSortByLength = React.memo(\n  props => (\n    <button\n      type=\"button\"\n      onClick={props.handler}\n    >\n      Sort by length\n    </button>\n  ),\n);\n\nButtonSortByLength.propTypes = {\n  handler: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonShowList } from './components/Buttons/ButtonShowList';\nimport { ButtonReverseList }\n  from './components/Buttons/ButtonReverseList.';\nimport { ButtonSortAlphabetically }\n  from './components/Buttons/ButtonSortAlphabetically';\nimport { ButtonResetList } from './components/Buttons/ButtonResetList';\nimport { ButtonSortByLength }\n  from './components/Buttons/ButtonSortByLength';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends Component {\n  state = {\n    isShown: false,\n    initialGoods: goodsFromServer,\n    isReverse: false,\n    sortBy: '',\n  };\n\n  showListHandler = () => {\n    this.setState(prevState => ({\n      isShown: !prevState.isShown,\n    }));\n  };\n\n  reverseListHandler = () => {\n    this.setState(prevState => ({\n      isReverse: !prevState.isReverse,\n    }));\n  }\n\n  sortListAlphabeticallyHandler = () => this.setState({\n    sortBy: 'alphabetically',\n    isReverse: false,\n  })\n\n  sortListByLengthHandler = () => this.setState({\n    sortBy: 'length',\n    isReverse: false,\n  })\n\n  resetListHandler = () => this.setState({\n    isReverse: false,\n    sortBy: '',\n  })\n\n  render() {\n    const {\n      showListHandler,\n      reverseListHandler,\n      sortListAlphabeticallyHandler,\n      resetListHandler,\n      sortListByLengthHandler,\n    } = this;\n\n    const { isShown, isReverse, initialGoods, sortBy } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <p>\n          {\n            `Available choice from: ${goodsFromServer.length}`\n          }\n        </p>\n        {isShown || <ButtonShowList handler={showListHandler} />}\n        <ButtonReverseList handler={reverseListHandler} />\n        <ButtonSortAlphabetically handler={sortListAlphabeticallyHandler} />\n        <ButtonResetList handler={resetListHandler} />\n        <ButtonSortByLength handler={sortListByLengthHandler} />\n        {isShown && (\n          <GoodsList\n            isReverse={isReverse}\n            sortBy={sortBy}\n            initialGoods={initialGoods}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}