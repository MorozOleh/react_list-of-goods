{"version":3,"sources":["components/Goods/Goods.jsx","components/GoodsList/GoodsList.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["Goods","goods","GoodsList","goodsList","map","key","Button","React","memo","props","type","onClick","handler","text","propTypes","PropTypes","func","isRequired","string","goodsFromServer","App","state","isShown","initialGoods","showListHandler","setState","prevState","reverseListHandler","reverse","sortListAlphabeticallyHandler","sort","currentGoods","nextGoods","localeCompare","sortListByLengthHandler","length","resetListHandler","this","className","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAIO,SAASA,EAAT,GAA2B,IAAVC,EAAS,EAATA,MACtB,OACE,4BAAKA,GCDF,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAC1B,OACE,4BACGA,EAAUC,KAAI,SAAAH,GAAK,OAClB,kBAACD,EAAD,CAAOK,IAAKJ,EAAOA,MAAOA,Q,oBCNrBK,EAASC,IAAMC,MAC1B,SAAAC,GAAK,OACH,4BACEC,KAAK,SACLC,QAASF,EAAMG,SAEdH,EAAMI,SAKbP,EAAOQ,UAAY,CACjBF,QAASG,IAAUC,KAAKC,WACxBJ,KAAME,IAAUG,OAAOD,Y,UCVnBE,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,SAAS,EACTC,aAAcJ,EACdhB,UAAU,GAAD,OAAMgB,IAJnB,EAOEK,gBAAkB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,SAAUI,EAAUJ,aAT1B,EAaEK,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,UAAW,YAAIuB,EAAUH,cAAcK,eAf7C,EAmBEC,8BAAgC,kBAAM,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAChEvB,UAAW,YAAIuB,EAAUH,cAAcO,MACrC,SAACC,EAAcC,GAAf,OAA6BD,EAAaE,cAAcD,WArB9D,EAyBEE,wBAA0B,kBAAM,EAAKT,UAAS,SAAAC,GAAS,MAAK,CAC1DvB,UAAW,YAAIuB,EAAUH,cAAcO,MACrC,SAACC,EAAcC,GAAf,OAA6BD,EAAaI,OAASH,EAAUG,eA3BnE,EA+BEC,iBAAmB,kBAAM,EAAKX,UAAS,SAAAC,GAAS,MAAK,CACnDvB,UAAU,YAAKuB,EAAUH,mBAhC7B,4CAmCE,WAAU,IAENC,EAKEa,KALFb,gBACAG,EAIEU,KAJFV,mBACAE,EAGEQ,KAHFR,8BACAO,EAEEC,KAFFD,iBACAF,EACEG,KADFH,wBANK,EASwBG,KAAKhB,MAA5BC,EATD,EASCA,QAASnB,EATV,EASUA,UAEjB,OACE,yBAAKmC,UAAU,OACb,qCACA,4DAE8BnB,EAAgBgB,SAI5Cb,GAEE,kBAAChB,EAAD,CACEM,QAASY,EACTX,KAAK,UAIX,kBAACP,EAAD,CAAQM,QAASe,EAAoBd,KAAK,WAC1C,kBAACP,EAAD,CACEM,QAASiB,EACThB,KAAK,wBAEP,kBAACP,EAAD,CACEM,QAASwB,EACTvB,KAAK,eAEP,kBAACP,EAAD,CACEM,QAASsB,EACTrB,KAAK,mBAENS,GACC,kBAACpB,EAAD,CACEC,UAAWA,SA9EvB,GAAyBoC,aCfzBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6ea6da4b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport React from 'react';\n\nexport function Goods({ goods }) {\n  return (\n    <li>{goods}</li>\n  );\n}\n\nGoods.propTypes = {\n  goods: PropTypes.string.isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\n\nimport React from 'react';\nimport { Goods } from '../Goods';\n\nexport function GoodsList({ goodsList }) {\n  return (\n    <ul>\n      {goodsList.map(goods => (\n        <Goods key={goods} goods={goods} />\n      ))}\n    </ul>\n  );\n}\n\nGoodsList.propTypes = {\n  goodsList: PropTypes.arrayOf(PropTypes.string.isRequired),\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const Button = React.memo(\n  props => (\n    <button\n      type=\"button\"\n      onClick={props.handler}\n    >\n      {props.text}\n    </button>\n  ),\n);\n\nButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends Component {\n  state = {\n    isShown: false,\n    initialGoods: goodsFromServer,\n    goodsList: [...goodsFromServer],\n  };\n\n  showListHandler = () => {\n    this.setState(prevState => ({\n      isShown: !prevState.isShown,\n    }));\n  };\n\n  reverseListHandler = () => {\n    this.setState(prevState => ({\n      goodsList: [...prevState.initialGoods].reverse(),\n    }));\n  }\n\n  sortListAlphabeticallyHandler = () => this.setState(prevState => ({\n    goodsList: [...prevState.initialGoods].sort(\n      (currentGoods, nextGoods) => currentGoods.localeCompare(nextGoods),\n    ),\n  }))\n\n  sortListByLengthHandler = () => this.setState(prevState => ({\n    goodsList: [...prevState.initialGoods].sort(\n      (currentGoods, nextGoods) => currentGoods.length - nextGoods.length,\n    ),\n  }))\n\n  resetListHandler = () => this.setState(prevState => ({\n    goodsList: [...prevState.initialGoods],\n  }))\n\n  render() {\n    const {\n      showListHandler,\n      reverseListHandler,\n      sortListAlphabeticallyHandler,\n      resetListHandler,\n      sortListByLengthHandler,\n    } = this;\n\n    const { isShown, goodsList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <p>\n          {\n            `Available choice from: ${goodsFromServer.length}`\n          }\n        </p>\n        {\n          isShown\n          || (\n            <Button\n              handler={showListHandler}\n              text=\"Start\"\n            />\n          )\n        }\n        <Button handler={reverseListHandler} text=\"Revers\" />\n        <Button\n          handler={sortListAlphabeticallyHandler}\n          text=\"Sort Alphabetically\"\n        />\n        <Button\n          handler={resetListHandler}\n          text=\"Reset List\"\n        />\n        <Button\n          handler={sortListByLengthHandler}\n          text=\"Sort By Length\"\n        />\n        {isShown && (\n          <GoodsList\n            goodsList={goodsList}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}